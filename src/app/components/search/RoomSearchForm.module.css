.form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem 0.75rem;
  background: linear-gradient(180deg, hsl(var(--card)) 0%, hsl(var(--background)) 100%);
  border: 1px solid hsl(var(--border));
  border-radius: calc(var(--radius) + 2px);
  padding: 1.25rem;
  margin-bottom: 1.25rem;
  box-shadow: 0 8px 24px rgba(0,0,0,0.06);
}
.inputGroup { display: flex; flex-direction: column; gap: 0.35rem; }
.inputGroup label {
  font-size: 0.875rem;
  font-weight: 600;
  letter-spacing: 0.02em;
}
.input {
  height: 2.75rem;
  border-radius: calc(var(--radius) + 2px);
  border: 1px solid hsl(var(--input));
  background: linear-gradient(180deg, hsl(var(--background)) 0%, hsl(var(--card)) 100%);
  color: hsl(var(--foreground));
  padding: 0 0.9rem;
  outline: none;
  transition: box-shadow 0.2s ease, border-color 0.2s ease, background-color 0.2s ease, transform 0.05s ease;
  box-shadow: inset 0 1px 0 rgba(255,255,255,0.04);
  caret-color: hsl(var(--primary));
  font-family: var(--font-sans);
}
.input::placeholder { color: hsl(var(--muted-foreground)); }
.input:hover { border-color: hsl(var(--primary) / 0.35); }
.input:focus-visible { box-shadow: 0 0 0 2px hsl(var(--background)), 0 0 0 4px hsl(var(--ring)); border-color: hsl(var(--ring)); }
.input:disabled { background-color: hsl(var(--muted)); color: hsl(var(--muted-foreground)); cursor: not-allowed; }

/* Custom select styling to match theme */
select.input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  padding-right: 2.25rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%2394a3b8' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.6rem center;
  background-size: 16px 16px;

  height: 2.75rem;
  border-radius: calc(var(--radius) + 2px);
  border: 1px solid hsl(var(--input));
  background: linear-gradient(180deg, hsl(var(--background)) 0%, hsl(var(--card)) 100%);
  color: hsl(var(--foreground));
  padding: 0 0.9rem;
  outline: none;
  transition: box-shadow 0.2s ease, border-color 0.2s ease, background-color 0.2s ease, transform 0.05s ease;
  box-shadow: inset 0 1px 0 rgba(255,255,255,0.04);
  caret-color: hsl(var(--primary));
  font-family: var(--font-sans);
}

/* Date input picker icon coloring for dark/light themes */
input[type="date"].input::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}
input[type="date"].input { color-scheme: light dark; }
input[type="date"].input{
  color-scheme: light dark;
  color: hsl(var(--foreground));
  font-family: var(--font-sans);
}
option.input {
  font-family: var(--font-sans);
  background: linear-gradient(180deg, hsl(var(--background)) 0%, hsl(var(--card)) 100%);
  color: hsl(var(--foreground));
}
option.input:disabled {
  color: hsl(var(--muted-foreground));
  background: hsl(var(--muted));
}

/* Remove number input spinners for a cleaner design */
input[type="number"].input::-webkit-outer-spin-button,
input[type="number"].input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"].input { -moz-appearance: textfield;
appearance: none;
}
.searchButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.6rem;
  height: 2.75rem;
  padding: 0 1.25rem;
  background: linear-gradient(180deg, hsl(var(--primary)) 0%, hsl(var(--primary) / 0.9) 100%);
  color: hsl(var(--primary-foreground));
  border-radius: 9999px;
  font-weight: 600;
  letter-spacing: 0.01em;
  border: none;
  cursor: pointer;
  align-self: end;
  box-shadow: 0 8px 16px hsl(var(--primary) / 0.25);
  transition: transform 0.05s ease, box-shadow 0.2s ease, background 0.2s ease;
}
.searchButton:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}
.searchButton:hover:not(:disabled) { box-shadow: 0 10px 22px hsl(var(--primary) / 0.3); }
.searchButton:active:not(:disabled) { transform: translateY(1px); }
.resultsContainer {
  margin-top: 2.5rem;
}
.loadingState,
.emptyState {
  text-align: center;
  padding: 3rem 1rem;
  color: hsl(var(--muted-foreground));
}
.loaderIcon {
  margin: 0 auto 1rem;
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.emptyState h3 {
  font-size: 1.25rem;
  font-weight: 600;
  color: hsl(var(--foreground));
}
.resultsGrid { display: grid; grid-template-columns: 1fr; gap: 1rem; }

.browseSection { margin-top: 2rem; }
.browseHeader { text-align: center; margin-bottom: 1rem; }
.browseHeader h3 { font-size: 1.25rem; font-weight: 700; }
.browseHeader p { color: hsl(var(--muted-foreground)); }
.browseGrid { display: grid; grid-template-columns: 1fr; gap: 1rem; }

@media (min-width: 640px) {
  .form { grid-template-columns: repeat(3, 1fr); padding: 1.25rem; }
  .resultsGrid { grid-template-columns: 1fr; gap: 1.25rem; }
  .browseGrid { grid-template-columns: 1fr; gap: 1.25rem; }
}

@media (min-width: 1024px) {
  .form { grid-template-columns: repeat(5, minmax(0, 1fr)); padding: 1.5rem; margin-bottom: 1.5rem; }
  .resultsGrid { grid-template-columns: 1fr; gap: 1.25rem; }
  .browseGrid { grid-template-columns: 1fr; gap: 1.25rem; }
}


.avatar {
  width: 100px; 
  border-radius: 50%;
  object-fit:contain;
  border: 4px solid hsl(var(--card));
}
.avatarFallback {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: hsl(var(--muted));
  display: flex;
  align-items: center;
  justify-content: center;
  color: hsl(var(--muted-foreground));
}

.fullWidth {
  grid-column: 1 / -1; /* For layouts where the form is a grid */
  width: 100%;
}

.errorText {
  color: hsl(var(--destructive));
  font-size: 0.875rem;
  width: 100%;
  text-align: center;
  margin-top: -0.5rem; /* Pull it closer to the form */
  margin-bottom: 0.5rem;
}

.slotPicker {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 0.6rem;
  background: linear-gradient(180deg, hsl(var(--card)) 0%, hsl(var(--background)) 100%);
  border-radius: calc(var(--radius) + 2px);
  border: 1px solid hsl(var(--border));
  box-shadow: inset 0 1px 0 rgba(255,255,255,0.04);
}

.slotButton {
  flex-grow: 1;
  padding: 0.55rem 0.85rem;
  background: linear-gradient(180deg, hsl(var(--background)) 0%, hsl(var(--card)) 100%);
  border: 1px solid hsl(var(--border));
  color: hsl(var(--foreground));
  border-radius: calc(var(--radius) + 2px);
  cursor: pointer;
  font-size: 0.82rem;
  font-weight: 600;
  text-align: center;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s, transform 0.05s;
  box-shadow: 0 1px 2px rgba(0,0,0,0.04);
}

.slotButton:hover { background-color: hsl(var(--accent)); }

.slotButton.selected {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border-color: hsl(var(--primary));
}


.slotButton {
  position: relative;
}

.slotButton:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  background-color: hsl(var(--muted));
}

.slotButton.selected {
  background: linear-gradient(180deg, hsl(var(--primary) / 0.15) 0%, hsl(var(--primary) / 0.25) 100%);
  color: hsl(var(--primary));
  border-color: hsl(var(--primary));
}


.slotButton.startSlot,
.slotButton.endSlot {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border-color: hsl(var(--primary));
  font-weight: 700;
}


.slotButton.startSlot::before,
.slotButton.endSlot::after {
    content: '';
    position: absolute;
    top: 2px;
    width: 5px;
    height: 5px;
    background-color: white;
    border-radius: 50%;
}
.slotButton.startSlot::before {
    left: 4px;
}
.slotButton.endSlot::after {
    right: 4px;
}

.rescheduleBanner {
    background-color: hsl(var(--primary) / 0.1);
    color: hsl(var(--primary));
    border: 1px solid hsl(var(--primary) / 0.3);
    border-radius: var(--radius);
    padding: 1rem;
    margin-bottom: 1.5rem;
    text-align: center;
    font-weight: 500;
}


